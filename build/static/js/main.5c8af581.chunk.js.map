{"version":3,"sources":["states.js","components/FilterBar.jsx","components/Header.jsx","components/ItemCard.jsx","components/ItemTile.jsx","components/ItemList.jsx","services/login.js","services/products.js","components/LoginModal.jsx","components/Notification.jsx","components/ProductForm.jsx","components/Toggleable.jsx","components/ViewSelector.jsx","components/App.jsx","index.jsx"],"names":["APP_STATES","TILE","LIST","LOGIN","FilterBar","filters","defineFilter","className","map","filter","key","onClick","toUpperCase","Header","title","setAppState","user","logout","loginStyle","display","justifyContent","alignItems","padding","color","backgroundColor","borderRadius","cursor","style","gridTemplateColumns","gridColumn","textAlign","fontSize","fontWeight","ItemCard","product","deleteProduct","useState","quantity","setQuantity","name","id","checkPropTypes","PropTypes","object","isRequired","ItemTile","prods","products","ItemList","login","credentials","a","axios","post","response","data","token","getAll","get","create","newObject","config","headers","Authorization","update","put","delete","setToken","newToken","LoginModal","setUser","setMessage","username","setUsername","password","setPassword","handleLogin","event","preventDefault","console","log","loginService","window","localStorage","setItem","JSON","stringify","productsService","setTimeout","onSubmit","value","onChange","target","type","Notification","message","ProductForm","addProduct","newProduct","setNewProduct","category","length","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","ViewSelector","App","newProductFormRef","useRef","appState","setProducts","setFilter","useEffect","loggedUser","getItem","parse","productService","then","allProducts","productsToDisplay","catch","removeItem","productObj","current","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c8af581.chunk.js","sourcesContent":["const APP_STATES = {\n  TILE: 'tile',\n  LIST: 'list',\n  LOGIN: 'login'\n}\n\nexport default APP_STATES","import React from 'react'\nimport './filterBar.css'\n\nconst FilterBar = ({ filters, defineFilter }) => {\n  return (\n    <div className=\"filter-bar\">\n      {filters.map((filter) => (\n        <span key={filter} className=\"filter-button\" onClick={() => defineFilter(filter)}>{filter.toUpperCase()}</span>\n      ))}\n    </div>\n  )\n}\n\nexport default FilterBar\n","import React from 'react'\nimport APP_STATES from '../states'\n\nconst Header = ({ title, setAppState, user, logout }) => {\n\n  const headerStyle = {\n    display: 'grid',\n    gridTemplateColumns: '1fr 8fr 1fr',\n    padding: '20px 0px',\n    backgroundColor: 'black'\n  }\n  const titleStyle = {\n    gridColumn: 2,\n    textAlign: 'center',\n    fontSize: '2em',\n    fontWeight: 'bold',\n    color: 'white',\n  }\n  const loginStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'middle',\n    padding: '10px 40px',\n    color: 'white',\n    backgroundColor: '#3568ff',\n    borderRadius: '10px',\n    cursor: 'pointer'\n  }\n\n  const loginButton = () => {\n    return (\n      <div style={loginStyle} onClick={() => setAppState(APP_STATES.LOGIN)}>\n        <span>Login</span>\n      </div>\n    )\n  }\n\n  const logoutButton = () => {\n    return (\n      <div style={loginStyle} onClick={logout}>\n        <span>Logout</span>\n      </div>\n    )\n  }\n\n  return (\n    <header style={headerStyle}>\n      <span style={titleStyle}>{title}</span>\n      {user === null ?\n        loginButton() :\n        logoutButton()\n      }\n    </header>\n  )\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './itemCard.css'\n\nconst ItemCard = ({ product, deleteProduct }) => {\n  const MAX_QUANTITY = 99\n  const [quantity, setQuantity] = useState(product.quantity)\n  const { name } = product\n\n  const increaseByOne = () => {\n    if (quantity < MAX_QUANTITY) {\n      setQuantity(quantity + 1)\n    }\n  }\n  const decreaseByOne = () => {\n    if (quantity > 0) {\n      setQuantity(quantity - 1)\n    }\n  }\n\n  return (\n    <div className=\"itemCard\">\n      <div className=\"name\" onClick={increaseByOne} >{name.toUpperCase()}</div>\n      <div className=\"controls\">\n        <div className=\"delete noselect\" onClick={() => deleteProduct(product.id)}>X</div>\n        <div className=\"quantity noselect\" onClick={decreaseByOne}>{quantity}</div>\n      </div>\n    </div>\n  )\n}\n\nItemCard.checkPropTypes = {\n  product: PropTypes.object.isRequired,\n}\n\nexport default ItemCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ItemCard from './ItemCard'\nimport './itemTile.css'\n\nconst ItemTile = ({ products, deleteProduct }) => {\n\n  const populateProductCards = (prods) => (\n    <>\n      {prods.map((product) => (\n        <ItemCard key={product.id} product={product} deleteProduct={deleteProduct} />\n      ))}\n    </>\n  )\n\n  return (\n    <div id=\"itemTile\">\n      { populateProductCards(products) }\n    </div>\n  )\n}\n\nItemTile.propTypes = {\n  products: PropTypes.array.isRequired,\n}\n\nexport default ItemTile\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './itemList.css'\n\nconst ItemList = ({ products, deleteProduct }) => {\n\n  const populateProductList = (prods) => (\n    <>\n      {prods.map((product) => (\n        <div key={product.id} className=\"list-item\">\n          <span>{product.name}</span>\n          <span>{product.quantity}</span>\n          <span>X</span>\n        </div>\n      ))}\n    </>\n  )\n\n  return (\n    <div id=\"itemList\">\n      { populateProductList(products) }\n    </div>\n  )\n}\n\nItemList.propTypes = {\n  products: PropTypes.array.isRequired,\n}\n\nexport default ItemList\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/products'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst deleteProduct = async (id) => {\n  await axios.delete(`${baseUrl}/${id}`)\n  return id\n}\n\nexport default { getAll, create, update, deleteProduct, setToken }","import APP_STATES from '../states'\nimport loginService from '../services/login'\nimport productsService from '../services/products'\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './loginModal.css'\n\nconst LoginModal = ({ setAppState, setUser, setMessage }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      console.log({ username, password })\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem('loggedGroceryIOUser', JSON.stringify(user))\n      productsService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setAppState(APP_STATES.TILE)\n    }\n    catch (exception) {\n      setMessage('Wrong credentials')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const closeModal = () => {\n    setUsername('')\n    setPassword('')\n    setAppState(APP_STATES.TILE)\n  }\n\n  return (\n    <div id=\"login-modal\">\n      <div id=\"login-form-container\">\n        <div className=\"close-btn emph\" onClick={closeModal}>\n          <div>X</div>\n        </div>\n        <form id=\"loginForm\" onSubmit={handleLogin}>\n          <div className=\"header\">\n            <div>Login</div>\n          </div>\n          <div className=\"label-container emph\">\n            <label className=\"label\">Username</label>\n            <input id=\"username\" value={username} onChange={({ target }) => setUsername(target.value)} />\n          </div>\n          <div className=\"label-container emph\">\n            <label className=\"label\">Password</label>\n            <input id=\"password\" value={password} onChange={({ target }) => setPassword(target.value)} />\n          </div>\n          <div>\n            <button type=\"submit\" id=\"login-submit\">Login</button>\n          </div>\n          <div>Not signed up? Create an account to save your lists and recommendations.</div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nLoginModal.propTypes = {\n  setAppState: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n  setMessage: PropTypes.func.isRequired\n}\n\nexport default LoginModal","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './notification.css'\n\nconst Notification = ({ message }) => {\n  console.log(message)\n\n  return (\n    <div className=\"message\">{message}</div>\n  )\n}\n\nNotification.propTypes = {\n  errorMessage: PropTypes.string,\n}\n\nexport default Notification\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\n\nconst ProductForm = ({ addProduct, setMessage }) => {\n  const [newProduct, setNewProduct] = useState('')\n  const MAX_PRODUCT_NAME_LENGTH = 28\n\n  const handleNewProductChange = (event) => {\n    if (event.target.value.length < MAX_PRODUCT_NAME_LENGTH) {\n      setNewProduct(event.target.value)\n      setMessage('')\n    }\n    else {\n      setMessage(`The new product name you provided is too long. Please make it less than ${MAX_PRODUCT_NAME_LENGTH} characters.`)\n    }\n  }\n\n  const submitProduct = (event) => {\n    event.preventDefault()\n    const productObj = {\n      name: newProduct,\n      category: 'produce',\n      quantity: 0\n    }\n    addProduct(productObj)\n    setNewProduct('')\n  }\n\n  return (\n    <div id=\"product-form-container\">\n      <form id=\"product-form\" onSubmit={submitProduct}>\n        <input id=\"new-product-input\" value={newProduct} onChange={handleNewProductChange} />\n        <button type=\"submit\" id=\"submitProductButton\">Save</button>\n      </form>\n    </div>\n  )\n}\n\nProductForm.propTypes = {\n  errorMessage: PropTypes.string,\n}\n\nexport default ProductForm\n","import PropTypes from 'prop-types'\nimport React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisibility }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import APP_STATES from '../states'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport './viewSelector.css'\n\nconst ViewSelector = ({ setAppState }) => {\n\n  return (\n    <div id=\"view-selector\">\n      <span className=\"view-option list\" onClick={ () => setAppState(APP_STATES.LIST) }>LIST</span>\n      <span className=\"view-option tile\" onClick={ () => setAppState(APP_STATES.TILE) }>TILE</span>\n    </div>\n  )\n}\n\nViewSelector.propTypes = {\n  errorMessage: PropTypes.string,\n}\n\nexport default ViewSelector\n","import './App.css'\nimport APP_STATES from '../states'\nimport FilterBar from './FilterBar'\nimport Header from './Header'\nimport ItemTile from './ItemTile'\nimport ItemList from './ItemList'\nimport LoginModal from './LoginModal'\nimport Notification from './Notification'\nimport ProductForm from './ProductForm'\nimport productService from '../services/products'\nimport React, { useState, useEffect, useRef } from 'react'\nimport Togglable from './Toggleable'\nimport ViewSelector from './ViewSelector'\n\nconst App = () => {\n  const title = 'Groceryio'\n  const CATEGORIES = [\n    'all',\n    'produce',\n    'dairy',\n    'frozen',\n    'meat',\n  ]\n\n  const newProductFormRef = useRef()\n  const [appState, setAppState] = useState(APP_STATES.TILE)\n  const [user, setUser] = useState(null)\n  const [products, setProducts] = useState([])\n  const [filter, setFilter] = useState('all')\n  const [message, setMessage] = useState('Enter a new product!')\n\n  const getLoggedUser = () => {\n    const loggedUser = window.localStorage.getItem('loggedGroceryIOUser')\n    if (loggedUser) {\n      const user = JSON.parse(loggedUser)\n      setUser(user)\n      productService.setToken(user.token)\n    }\n  }\n\n  useEffect(getLoggedUser, []) // [] specifies the effect to only run after first render\n\n  const getProductsHook = () => {\n    productService\n      .getAll()\n      .then(allProducts => {\n        setProducts(allProducts)\n        setMessage('Products loaded!')\n      })\n  }\n\n  useEffect(getProductsHook, []) // [] specifies the effect to only run after first render\n\n  const productsToDisplay = () => {\n    if (filter === 'all') {\n      return products\n    }\n    else {\n      return products.filter((product) => product.category === filter)\n    }\n  }\n\n  const defineFilter = (category) => {\n    setFilter(category)\n    console.log(category)\n  }\n\n  const addProduct = (productObj) => {\n    newProductFormRef.current.toggleVisibility()\n    productService\n      .create(productObj)\n      .then(newProduct => {\n        setProducts(products.concat(newProduct))\n      })\n  }\n\n  const deleteProduct = (id) => {\n    productService\n      .deleteProduct(id)\n      .then(response => {\n        console.log('Product deleted. ID: ', response)\n        setProducts(products.filter(product => product.id !== id))\n      })\n      .catch(() => {\n        setMessage(`ERROR: The ID '${id}' is not a current or valid product ID.`)\n      })\n  }\n\n  const loginForm = () => {\n    return <LoginModal setUser={setUser} setMessage={setMessage} setAppState={setAppState} />\n  }\n\n  const logout = () => {\n    setUser(null)\n    productService.setToken(null)\n    window.localStorage.removeItem('loggedGroceryIOUser')\n  }\n\n  const tileView = () => {\n    return (\n      <ItemTile products={productsToDisplay()} deleteProduct={deleteProduct} />\n    )\n  }\n\n  const listView = () => {\n    return (\n      <ItemList products={productsToDisplay()} deleteProduct={deleteProduct} />\n    )\n  }\n\n  return (\n    <div id=\"App\">\n      { appState === APP_STATES.LOGIN && loginForm()}\n      <Header title={title} user={user} setAppState={setAppState} logout={logout} />\n      <Notification message={message} />\n      <Togglable buttonLabel='Add Product' ref={newProductFormRef}>\n        <ProductForm addProduct={addProduct} setMessage={setMessage} />\n      </Togglable>\n      <ViewSelector setAppState={setAppState} />\n      <FilterBar filters={CATEGORIES} defineFilter={defineFilter} />\n      { appState === APP_STATES.LIST && listView()}\n      { appState === APP_STATES.TILE && tileView()}\n    </div>\n  )\n}\n\nexport default App\n","import App from './components/App'\nimport ReactDOM from 'react-dom'\nimport React from 'react'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}