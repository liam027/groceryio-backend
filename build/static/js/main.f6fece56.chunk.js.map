{"version":3,"sources":["reducers/userReducer.js","components/Button.jsx","components/FilterBar.jsx","services/products.js","reducers/productReducer.js","hooks/useProductCounter.js","components/ListItem.jsx","components/ListView.jsx","components/LogButton.jsx","services/login.js","reducers/messageReducer.js","components/LoginForm.jsx","reducers/viewReducer.js","components/NavBarMenu.jsx","components/Notification.jsx","components/ProductForm.jsx","components/TileItem.jsx","components/TileView.jsx","reducers/filterReducer.js","components/App.jsx","store.js","index.jsx"],"names":["setUser","user","type","userReducer","state","action","Button","styled","MuiButton","spacing","FilterBar","filters","defineFilter","className","map","filter","key","variant","onClick","toUpperCase","baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","deleteProduct","delete","setToken","newToken","updateProduct","updatedProduct","dispatch","productService","productReducer","concat","product","console","log","useProductCounter","useDispatch","count","quantity","inc","dec","deletedProduct","ListItem","counter","name","checkPropTypes","PropTypes","object","isRequired","ListView","products","LogButton","logOut","history","useHistory","currentUser","useSelector","login","push","color","credentials","setMessage","message","messageReducer","LoginForm","useState","username","setUsername","password","setPassword","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","productsService","setTimeout","to","onSubmit","value","onChange","target","setView","view","viewReducer","NavBarMenu","mr","IconButton","aria-label","Notification","ProductForm","setName","category","setCategory","handleCategoryChange","radioButton","checked","toLowerCase","productObj","newProduct","TextField","label","length","TileItem","TileView","prods","filterReducer","App","useEffect","loggedUser","getItem","parse","productsToDisplay","Container","maxWidth","path","removeItem","setFilter","reducer","combineReducers","store","createStore","applyMiddleware","thunk","renderApp","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.f6fece56.chunk.js","sourcesContent":["const userReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'SET_USER':\n    return action.user\n  case 'CLEAR_USER':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setUser = user => {\n  return {\n    type: 'SET_USER',\n    user,\n  }\n}\n\nexport const clearUser = () => {\n  return {\n    type: 'CLEAR_USER'\n  }\n}\n\nexport default userReducer","import MuiButton from '@material-ui/core/Button'\nimport { spacing } from '@material-ui/system'\nimport { styled } from '@material-ui/core/styles'\n\n/**\n * Applies the spacing system to the material UI Button\n */\nconst Button = styled(MuiButton)(spacing)\n\nexport default Button","import './filterBar.css'\nimport Button from './Button'\nimport React from 'react'\n\nconst FilterBar = ({ filters, defineFilter }) => {\n  return (\n    <div className=\"filter-bar\">\n      {filters.map((filter) => (\n        <Button key={filter} variant=\"contained\" className=\"filter-button\" onClick={() => defineFilter(filter)}>{filter.toUpperCase()}</Button>\n      ))}\n    </div>\n  )\n}\n\nexport default FilterBar\n","import axios from 'axios'\nconst baseUrl = '/api/products'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst deleteProduct = async (id) => {\n  await axios.delete(`${baseUrl}/${id}`)\n  return id\n}\n\nexport default { getAll, create, update, deleteProduct, setToken }","import productService from '../services/products'\n\nconst productReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_PRODUCT':\n    return state.concat(action.data)\n  case 'DELETE_PRODUCT':\n    return state.filter((product) => {\n      return product.id !== action.data\n    })\n  case 'SET_PRODUCTS':\n    return action.data\n  case 'UPDATE_PRODUCT':\n    console.log(state.map((product) => {\n      return product.id === action.data.id ? action.data : product\n    }))\n    return state.map((product) => {\n      return product.id === action.data.id ? action.data : product\n    })\n  default:\n    return state\n  }\n}\n\nexport const createProduct = (data) => {\n  return async dispatch => {\n    const newProduct = await productService.create(data)\n    dispatch({\n      type: 'NEW_PRODUCT',\n      data: newProduct\n    })\n  }\n}\n\nexport const initProducts = () => {\n  return async dispatch => {\n    const products = await productService.getAll()\n    dispatch({\n      type: 'SET_PRODUCTS',\n      data: products\n    })\n  }\n}\n\nexport const setProducts = (products) => {\n  return {\n    type: 'SET_PRODUCTS',\n    data: products\n  }\n}\n\nexport const deleteProduct = (id) => {\n  return async dispatch => {\n    const deletedProduct = await productService.deleteProduct(id)\n    dispatch({\n      type: 'DELETE_PRODUCT',\n      data: deletedProduct\n    })\n  }\n}\n\nexport const updateProduct = (id, updatedProduct) => {\n  return async dispatch => {\n    const savedProduct = await productService.update(id, updatedProduct)\n    dispatch({\n      type: 'UPDATE_PRODUCT',\n      data: updatedProduct\n    })\n  }\n}\n\nexport default productReducer","import { deleteProduct } from '../reducers/productReducer'\nimport { updateProduct } from '../reducers/productReducer'\nimport { useDispatch } from 'react-redux'\n\nconst useProductCounter = (product) => {\n  const dispatch = useDispatch()\n  const MAX_COUNT = 99\n  let count = product.quantity\n\n  const inc = () => {\n    if (count < MAX_COUNT) {\n      dispatch(updateProduct(product.id, { ...product, quantity: product.quantity + 1 }))\n    }\n  }\n  const dec = () => {\n    if (count > 0) {\n      dispatch(updateProduct(product.id, { ...product, quantity: product.quantity - 1 }))\n    }\n    else {\n      dispatch(deleteProduct(product.id))\n    }\n  }\n\n  return {\n    count,\n    inc,\n    dec\n  }\n}\n\nexport default useProductCounter","import './listItem.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport useProductCounter from '../hooks/useProductCounter'\n\nconst ListItem = ({ product }) => {\n  const counter = useProductCounter(product)\n\n  return (\n    <div className=\"list-card\">\n      <div className='counter centered-flex'>\n        <span>{product.name}</span>\n      </div>\n      <div className='counter centered-flex pointer'>\n        <span onClick={counter.dec}>-</span>\n      </div>\n      <div className='counter centered-flex'>\n        <span>{counter.count}</span>\n      </div>\n      <div className='counter centered-flex pointer'>\n        <span onClick={counter.inc}>+</span>\n      </div>\n    </div>\n  )\n}\n\nListItem.checkPropTypes = {\n  product: PropTypes.object.isRequired,\n}\n\nexport default ListItem\n\n\n\n","import './listView.css'\nimport ListItem from './ListItem'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst ListView = ({ products }) => {\n\n  return (\n    <div id=\"list-view\">\n      {products.map((product) => (\n        <ListItem key={product.id} product={product} />\n      ))}\n    </div>\n  )\n}\n\nListView.propTypes = {\n  products: PropTypes.array.isRequired,\n}\n\nexport default ListView\n","import './logButton.css'\nimport Button from './Button'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst LogButton = ({ logOut }) => {\n  const history = useHistory()\n  const currentUser = useSelector(state => state.user)\n\n  const login = () => {\n    history.push('/login')\n  }\n\n  const loginButton = () => {\n    return (\n      <div className='log-button-container' onClick={login}>\n        <Button id='log-button' className='pointer' variant=\"contained\" color=\"primary\">Login</Button>\n      </div>\n    )\n  }\n\n  const logoutButton = () => {\n    return (\n      <div className='log-button-container' onClick={logOut}>\n        <Button id='log-button' className='pointer' variant=\"contained\" color=\"secondary\">Logout</Button>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      { currentUser === null ?\n        loginButton() :\n        logoutButton()\n      }\n    </>\n  )\n}\n\nLogButton.checkPropTypes = {\n  user: PropTypes.object.isRequired,\n}\n\nexport default LogButton\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","const messageReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'SET_MESSAGE':\n    return action.message\n  default:\n    return state\n  }\n}\n\nexport const setMessage = message => {\n  return {\n    type: 'SET_MESSAGE',\n    message,\n  }\n}\n\nexport default messageReducer","import './loginForm.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport React, { useState } from 'react'\nimport loginService from '../services/login'\nimport productsService from '../services/products'\nimport { setMessage } from '../reducers/messageReducer'\nimport { setUser } from '../reducers/userReducer'\nimport { useDispatch } from 'react-redux'\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      console.log({ username, password })\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem('loggedGroceryIOUser', JSON.stringify(user))\n      productsService.setToken(user.token)\n      dispatch(setUser(user))\n      setUsername('')\n      setPassword('')\n      history.push('/')\n    }\n    catch (exception) {\n      dispatch(setMessage('Wrong credentials'))\n      setTimeout(() => {\n        dispatch(setMessage(null))\n      }, 5000)\n    }\n  }\n\n  const closeForm = () => {\n    setUsername('')\n    setPassword('')\n    history.push('/')\n  }\n\n  return (\n    <div id=\"login-form-splash\">\n      <div id=\"login-form-container\">\n        <Link to=\"/\">\n          <div className=\"close-btn emph pointer\" onClick={closeForm}>\n            <div>X</div>\n          </div>\n        </Link>\n        <form id=\"login-form\" onSubmit={handleLogin}>\n          <div className=\"header\">\n            <div>Login</div>\n          </div>\n          <div className=\"label-container emph\">\n            <label className=\"label\">Username</label>\n            <input id=\"username\" value={username} onChange={({ target }) => setUsername(target.value)} />\n          </div>\n          <div className=\"label-container emph\">\n            <label className=\"label\">Password</label>\n            <input id=\"password\" value={password} onChange={({ target }) => setPassword(target.value)} />\n          </div>\n          <div>\n            <button type=\"submit\" id=\"login-submit\">Login</button>\n          </div>\n          <div>Not signed up? Create an account to save your lists and recommendations.</div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm","const viewReducer = (state = 'tile', action) => {\n  switch (action.type) {\n  case 'SET_VIEW':\n    return action.view\n  default:\n    return state\n  }\n}\n\nexport const setView = view => {\n  return {\n    type: 'SET_VIEW',\n    view,\n  }\n}\n\nexport default viewReducer","import './navBarMenu.css'\nimport Button from './Button'\nimport { IconButton } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { setView } from '../reducers/viewReducer'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nconst NavBarMenu = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  return (\n    <span id=\"navbar-menu\">\n      <Button variant=\"contained\" color=\"primary\" mr={2} onClick={() => dispatch(setView('list'))}>LIST</Button>\n      <Button variant=\"contained\" color=\"primary\" mr={2} onClick={() => dispatch(setView('tile'))}>TILE</Button>\n      <IconButton color=\"primary\" aria-label=\"Add product\" onClick={() => history.push('/add_product')}>\n        <span className='add-product-button'></span>\n      </IconButton>\n    </span>\n  )\n}\n\nNavBarMenu.propTypes = {\n  errorMessage: PropTypes.string,\n}\n\nexport default NavBarMenu\n","import './notification.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n  let message = useSelector(state => state.message)\n\n  return (\n    <div className=\"message\">{message}</div>\n  )\n}\n\nNotification.propTypes = {\n  errorMessage: PropTypes.string,\n}\n\nexport default Notification\n","import './productForm.css'\nimport { Button, TextField } from '@material-ui/core'\nimport { Link, useHistory } from 'react-router-dom'\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { createProduct } from '../reducers/productReducer'\nimport { setMessage } from '../reducers/messageReducer'\nimport { useDispatch } from 'react-redux'\n\nconst ProductForm = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [category, setCategory] = useState('')\n  const MAX_PRODUCT_NAME_LENGTH = 28\n  const CATEGORIES = [\n    'all',\n    'produce',\n    'dairy',\n    'frozen',\n    'meat',\n  ]\n\n  const handleNameChange = (event) => {\n    if (event.target.value.length < MAX_PRODUCT_NAME_LENGTH) {\n      setName(event.target.value)\n      dispatch(setMessage(''))\n    }\n    else {\n      dispatch(setMessage(`The new product name you provided is too long. Please make it less than ${MAX_PRODUCT_NAME_LENGTH} characters.`))\n    }\n  }\n\n  const handleCategoryChange = (event) => {\n    setCategory(event.target.value)\n  }\n\n  const submitProduct = (event) => {\n    event.preventDefault()\n    const productObj = {\n      name: name,\n      category: category,\n      quantity: 0\n    }\n    setName('')\n    history.push('/')\n    dispatch(createProduct(productObj))\n  }\n\n  const closeForm = () => {\n    setName('')\n    history.push('/')\n  }\n\n  const radioButton = (name) => {\n    return (\n      <div className=\"radio\" key={name}>\n        <label>\n          <input\n            type=\"radio\"\n            value={name}\n            checked={category.toLowerCase() === name}\n            onChange={handleCategoryChange}\n          />\n          {name}\n        </label>\n      </div>\n    )\n  }\n\n  return (\n    <div id=\"product-form-splash\">\n      <div id=\"product-form-container\">\n        <Link to=\"/\">\n          <div className=\"close-btn emph\" onClick={closeForm}>\n            <div>X</div>\n          </div>\n        </Link>\n        <form id=\"product-form\" onSubmit={submitProduct}>\n          <div className=\"header\">\n            <div>Add Product</div>\n          </div>\n          <div>\n            <TextField label='name' onChange={handleNameChange} />\n          </div>\n          <div className=\"label-container emph\">\n            <label className=\"label\">Category</label>\n            {CATEGORIES.map((category) => radioButton(category))}\n          </div>\n          <div>\n            <Button type=\"submit\" id=\"product-submit\">Add Product</Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nProductForm.propTypes = {\n  errorMessage: PropTypes.string,\n}\n\nexport default ProductForm\n","import './tileItem.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport useProductCounter from '../hooks/useProductCounter'\n\nconst TileItem = ({ product }) => {\n  const counter = useProductCounter(product)\n\n  return (\n    <div className=\"tile-item\">\n      <div className=\"name\" onClick={counter.inc} >{product.name.toUpperCase()}</div>\n      <div className=\"controls\">\n        <div className=\"quantity pointer\" onClick={counter.dec}>-</div>\n        <div className=\"delete noselect\">{counter.count}</div>\n        <div className=\"quantity pointer\" onClick={counter.inc}>+</div>\n      </div>\n    </div>\n  )\n}\n\nTileItem.checkPropTypes = {\n  product: PropTypes.object.isRequired,\n}\n\nexport default TileItem\n","import './tileView.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport TileItem from './TileItem'\n\nconst TileView = ({ products }) => {\n\n  const populateProductCards = (prods) => (\n    <>\n      {prods.map((product) => (\n        <TileItem key={product.id} product={product}/>\n      ))}\n    </>\n  )\n\n  return (\n    <div id=\"tileView\">\n      { populateProductCards(products) }\n    </div>\n  )\n}\n\nTileView.propTypes = {\n  products: PropTypes.array.isRequired,\n}\n\nexport default TileView\n","const filterReducer = (state = 'all', action) => {\n  switch (action.type) {\n  case 'SET_FILTER':\n    return action.filter\n  default:\n    return state\n  }\n}\n\nexport const setFilter = filter => {\n  return {\n    type: 'SET_FILTER',\n    filter,\n  }\n}\n\nexport default filterReducer","import './App.css'\nimport React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { clearUser, setUser } from '../reducers/userReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Container from '@material-ui/core/Container'\nimport FilterBar from './FilterBar'\nimport ListView from './ListView'\nimport LogButton from './LogButton'\nimport LoginForm from './LoginForm'\nimport NavBarMenu from './NavBarMenu'\nimport Notification from './Notification'\nimport ProductForm from './ProductForm'\nimport TileView from './TileView'\nimport { initProducts } from '../reducers/productReducer'\nimport productService from '../services/products'\nimport { setFilter } from '../reducers/filterReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const products = useSelector(state => state.products)\n  const filter = useSelector(state => state.filter)\n  const view = useSelector(state => state.view)\n  console.log(view)\n\n  const CATEGORIES = [\n    'all',\n    'produce',\n    'dairy',\n    'frozen',\n    'meat',\n  ]\n\n  const getLoggedUser = () => {\n    const loggedUser = window.localStorage.getItem('loggedGroceryIOUser')\n    if (loggedUser) {\n      const user = JSON.parse(loggedUser)\n      dispatch(setUser(user))\n      productService.setToken(user.token)\n    }\n  }\n\n  useEffect(getLoggedUser, []) // [] = only run after first render\n\n  const getProductsHook = () => {\n    dispatch(initProducts())\n  }\n\n  useEffect(getProductsHook, []) // [] = only run after first render\n\n  const productsToDisplay = () => {\n    if (filter === 'all') {\n      return products\n    }\n    else {\n      return products.filter((product) => product.category === filter)\n    }\n  }\n\n  const defineFilter = (category) => {\n    dispatch(setFilter(category))\n  }\n\n  const logOut = () => {\n    dispatch(clearUser())\n    productService.setToken(null)\n    window.localStorage.removeItem('loggedGroceryIOUser')\n  }\n\n  const tileView = () => {\n    return (\n      <TileView products={productsToDisplay()} />\n    )\n  }\n\n  const listView = () => {\n    return (\n      <ListView products={productsToDisplay()} />\n    )\n  }\n\n  return (\n    <Container id='App' maxWidth=\"lg\">\n      <Switch>\n        <Route path='/login'>\n          <LoginForm />\n        </Route>\n        <Route path='/add_product'>\n          <ProductForm />\n        </Route>\n      </Switch>\n\n      <header className='navbar'>\n        <NavBarMenu />\n        <div className='title-container'>\n          Groceryio\n        </div>\n        <LogButton logOut={logOut} />\n      </header>\n\n      <FilterBar filters={CATEGORIES} defineFilter={defineFilter} />\n      <Notification />\n      {view === 'list' && listView()}\n      {view === 'tile' && tileView()}\n    </Container>\n  )\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport filterReducer from './reducers/filterReducer'\nimport messageReducer from './reducers/messageReducer'\nimport productReducer from './reducers/productReducer'\nimport thunk from 'redux-thunk'\nimport userReducer from './reducers/userReducer'\nimport viewReducer from './reducers/viewReducer'\n\nconst reducer = combineReducers({\n  products: productReducer,\n  filter: filterReducer,\n  user: userReducer,\n  message: messageReducer,\n  view: viewReducer\n})\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './store'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n    , document.getElementById('root'))\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n"],"sourceRoot":""}